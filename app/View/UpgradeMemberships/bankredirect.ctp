<?php
$e='';
require_once WWW_ROOT.'banktransfer_mobilpay/Mobilpay/Payment/Request/Abstract.php';
require_once WWW_ROOT.'banktransfer_mobilpay/Mobilpay/Payment/Request/Transfer.php';
require_once WWW_ROOT.'banktransfer_mobilpay/Mobilpay/Payment/Invoice.php';
require_once WWW_ROOT.'banktransfer_mobilpay/Mobilpay/Payment/Address.php';
if($this->Session->check('billtype'))
{
	$billtype=$this->Session->read('billtype');
}
else
{
	$billtype="person";
}
//for testing purposes, all payment requests will be sent to the sandbox server. Once your account will be active you must switch back to the live server https://secure.mobilpay.ro/transfer
$paymentUrl = 'http://sandboxsecure.mobilpay.ro/transfer';

// this is the path on your server to the public certificate. You may download this from Admin -> Conturi de comerciant -> Detalii -> Setari securitate
$x509FilePath 	= WWW_ROOT.'banktransfer_mobilpay/public.cer';
try
{
	srand((double) microtime() * 1000000);
	$objPmReqCard 						= new Mobilpay_Payment_Request_Transfer();
	#merchant account signature - generated by mobilpay.ro for every merchant account
	#semnatura contului de comerciant - mergi pe www.mobilpay.ro Admin -> Conturi de comerciant -> Detalii -> Setari securitate
	$objPmReqCard->signature 			= 'P28N-T68X-N8NM-P382-R1NP';
	#you should assign here the transaction ID registered by your application for this commercial operation
	#order_id should be unique for a merchant account
	$objPmReqCard->orderId 				= md5(uniqid(rand()));
	#supply return_url and/or confirm_url only if you want to overwrite the ones configured for the service/product when it was created
	#if you don't want to supply a different return/confirm URL, just let it null
	$objPmReqCard->confirmUrl 			= $base_url.'UpgradeMemberships/failed';
	$objPmReqCard->returnUrl 			= $base_url.'UpgradeMemberships/success';

	#detalii cu privire la plata: moneda, suma, descrierea
	#payment details: currency, amount, description
	$objPmReqCard->invoice = new Mobilpay_Payment_Invoice();
	$objPmReqCard->invoice->currency	= 'RON';
	$objPmReqCard->invoice->amount		= $UserMembership['UserMembership']['price'];
	/*$objPmReqCard->invoice->installments= '2,3';*/
	$objPmReqCard->invoice->details		= 'PlÄƒti cu Transfer bancar prin mobilPay';

	#detalii cu privire la adresa posesorului cardului
	#details on the cardholder address
	$billingAddress 				= new Mobilpay_Payment_Address();
	$billingAddress->type			= $billtype;
	$billingAddress->firstName		= $tempDetails['TempMembershipDetail']['fname'];
	$billingAddress->lastName		= '';
	/*$billingAddress->fiscalNumber	= $_POST['billing_fiscal_number'];*/
	/*$billingAddress->identityNumber	= $_POST['billing_identity_number'];*/
	/*$billingAddress->country		= $_POST['billing_country'];
	$billingAddress->county			= $_POST['billing_county'];
	$billingAddress->city			= $_POST['billing_city'];
	$billingAddress->zipCode		= $_POST['billing_zip_code'];*/
	$billingAddress->address		= $tempDetails['TempMembershipDetail']['address'];
	$billingAddress->email			= $tempDetails['TempMembershipDetail']['email'];
	$billingAddress->mobilePhone	= $tempDetails['TempMembershipDetail']['phone'];
	/*$billingAddress->bank			= $_POST['billing_bank'];
	$billingAddress->iban			= $_POST['billing_iban'];*/
	$objPmReqCard->invoice->setBillingAddress($billingAddress);

	#detalii cu privire la adresa de livrare
	#details on the shipping address
	$shippingAddress 				= new Mobilpay_Payment_Address();
	$shippingAddress->type			= $billtype;
	$shippingAddress->firstName		= $tempDetails['TempMembershipDetail']['fname'];
	$shippingAddress->lastName		= '';
	/*$shippingAddress->fiscalNumber	= $_POST['shipping_fiscal_number'];
	$shippingAddress->identityNumber= $_POST['shipping_identity_number'];
	$shippingAddress->country		= $_POST['shipping_country'];
	$shippingAddress->county		= $_POST['shipping_county'];
	$shippingAddress->city			= $_POST['shipping_city'];
	$shippingAddress->zipCode		= $_POST['shipping_zip_code'];*/
	$shippingAddress->address		= $tempDetails['TempMembershipDetail']['address'];
	$shippingAddress->email			= $tempDetails['TempMembershipDetail']['email'];
	$shippingAddress->mobilePhone	= $tempDetails['TempMembershipDetail']['phone'];
	/*$shippingAddress->bank			= $_POST['shipping_bank'];
	$shippingAddress->iban			= $_POST['shipping_iban'];*/
	$objPmReqCard->invoice->setShippingAddress($shippingAddress);

	$objPmReqCard->encrypt($x509FilePath);
}
catch(Exception $e)
{
}
?>
<div class="span-15 prepend-1">

<?php if(!($e instanceof Exception)):?>
<p>
	<form name="frmPaymentRedirect" id="frmPaymentRedirect" method="post" action="<?php echo $paymentUrl;?>">
	<input type="hidden" name="env_key" value="<?php echo $objPmReqCard->getEnvKey();?>"/>
	<input type="hidden" name="data" value="<?php echo $objPmReqCard->getEncData();?>"/>
	
	</form>
</p>
<!--
<script type="text/javascript" language="javascript">
	window.setTimeout(document.frmPaymentRedirect.submit(), 5000);
</script> -->
<?php else:?>
<p><strong><?php
//pr($e);
 echo $e->getMessage();?></strong></p>
<?php endif;?>
<script type="text/javascript">
	document.getElementById('frmPaymentRedirect').submit();</script>
